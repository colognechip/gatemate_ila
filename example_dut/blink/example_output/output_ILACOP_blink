gatemate_ila\app> python3 ILAcop.py config -vlog ..\example_dut\blink\src\ -t blink

#################################################################################################
#                   Cologne Chip GateMate ILA control program (ILAcop)                          #
# ********************************************************************************************* #
#    Copyright (C) 2023 Cologne Chip AG <support@colognechip.com>                               #
#    Developed by Dave Fohrn                                                                    #
#                                                                                               #
#    This program is free software: you can redistribute it and/or modify                       #
#    it under the terms of the GNU General Public License as published by                       #
#    the Free Software Foundation, either version 3 of the License, or                          #
#    (at your option) any later version.                                                        #
#                                                                                               #
#    This program is distributed in the hope that it will be useful,                            #
#    but WITHOUT ANY WARRANTY; without even the implied warranty of                             #
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                              #
#    GNU General Public License for more details.                                               #
#                                                                                               #
#    You should have received a copy of the GNU General Public License                          #
#    along with this program.  If not, see <https://www.gnu.org/licenses/>.                     #
#                                                                                               #
# ********************************************************************************************* #
#################################################################################################


################# ccf File ##################
#                                           #
# blink.ccf                                 #
#                                           #
#############################################


############### verilog Files ###############
#                                           #
# blink.v                                   #
#                                           #
#############################################

Examine DUT ...


############# Block RAM in use ##############
#                                           #
# CC_BRAM_20K in use: 0                     #
# CC_BRAM_40K in use: 0                     #
#                                           #
#############################################


############ Found PLL instance #############
#                                           #
# Pll name  = pll_inst                      #
# Frequency = 25 MHz                        #
#                                           #
#############################################

########### Found CC_USR_RSTN ###########

!!!!!!!!!!!!!!!!!!!!!!!!!!!!! NOTE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!                                                              !
! Now you will be guided through the configuration of the ILA. !
! Entering 'e' exits the process and generates a configurable  !
! JSON file for the given DUT.                                 !
! Enter 'p' for 'previous' to backtrack a step.                !
!                                                              !
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! NOTE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!                                                                       !
! In the following, a clock source for the ILA should be selected.      !
! Usually, the same clk signal that clocks the tested signals suffices. !
!                                                                       !
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


Here are the possible ways to provide a clock to the ILA:

 1 = Use an external clk input signal.
 2 = Use an additional PLL with a freely selectable frequency (additional net of the global Mesh are required).
 3 = Use a signal generated by a PLL from your design.

Please choose between 1 and 3: 2

########### found DUT clk source ############
#                                           #
# Input serves as ILA clk source: "clk"     #
#                                           #
#############################################

Do you want to change the clk source? (y:yes/N:no):

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Note !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!                                                                                 !
! The sampling frequency determines the rate at which signals are captured.       !
! When selecting the frequency, ensure it is harmonious with the DUT's frequency, !
!  either matching or an integral multiple.                                       !
! Recommended max. sampling frequency up to 200MHz.                               !
!                                                                                 !
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Choose a sampling frequency (greater than 0, float, in MHz): 200

!!!!!!!!!!!!!!!!!!!!! User controllable reset !!!!!!!!!!!!!!!!!!!!!
!                                                                 !
! The ILA can hold the DUT in reset until capture starts.         !
! This makes it possible to capture the start process of the DUT. !
! Attention, the ila treats the signal as active LOW.             !
!                                                                 !
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

The following options are available:

 1 = Use an external reset input signal.
 2 = Deactivate this function.
 3 = Use the ouput signal from the CC_USR_RSTN primitive in your design. (The functionality of the CC_USR_RSTN primitive is still given).

Please choose between 1 and 3: 3

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! NOTE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!                                                                                                 !
! You will be prompted to select signals for analysis from those found in your design under test. !
!                                                                                                 !
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


------------------------- blink --------------------------
+----+-------------------+--------+----------+-----------+
|  # | name              | range  | selected | hierarchy |
+----+-------------------+--------+----------+-----------+
|  1 | LED_ctrl          |   1    |    []    |           |
|  2 | clk               |   1    |    []    |           |
|  3 | clk0              |   1    |    []    |           |
|  4 | clk180            |   1    |    []    |           |
|  5 | clk270            |   1    |    []    |           |
|  6 | clk90             |   1    |    []    |           |
|  7 | counter           | [24:0] |    []    |           |
|  8 | led               | [7:0]  |    []    |           |
|  9 | rst               |   1    |    []    |           |
| 10 | usr_pll_lock      |   1    |    []    |           |
| 11 | usr_pll_lock_stdy |   1    |    []    |           |
| 12 | usr_ref_out       |   1    |    []    |           |
+----+-------------------+--------+----------+-----------+

## Number of selected bits to be analysed ###
#                                           #
# 0 (max. 600)                              #
#                                           #
#############################################

Select signals to be analyzed (0 = finish): 2

------------------------- blink --------------------------
+----+-------------------+--------+----------+-----------+
|  # | name              | range  | selected | hierarchy |
+----+-------------------+--------+----------+-----------+
|  1 | LED_ctrl          |   1    |    []    |           |
|  2 | clk               |   1    |  ['A']   |           |
|  3 | clk0              |   1    |    []    |           |
|  4 | clk180            |   1    |    []    |           |
|  5 | clk270            |   1    |    []    |           |
|  6 | clk90             |   1    |    []    |           |
|  7 | counter           | [24:0] |    []    |           |
|  8 | led               | [7:0]  |    []    |           |
|  9 | rst               |   1    |    []    |           |
| 10 | usr_pll_lock      |   1    |    []    |           |
| 11 | usr_pll_lock_stdy |   1    |    []    |           |
| 12 | usr_ref_out       |   1    |    []    |           |
+----+-------------------+--------+----------+-----------+

## Number of selected bits to be analysed ###
#                                           #
# 1 (max. 600)                              #
#                                           #
#############################################

Select signals to be analyzed (0 = finish): 3

------------------------- blink --------------------------
+----+-------------------+--------+----------+-----------+
|  # | name              | range  | selected | hierarchy |
+----+-------------------+--------+----------+-----------+
|  1 | LED_ctrl          |   1    |    []    |           |
|  2 | clk               |   1    |  ['A']   |           |
|  3 | clk0              |   1    |  ['A']   |           |
|  4 | clk180            |   1    |    []    |           |
|  5 | clk270            |   1    |    []    |           |
|  6 | clk90             |   1    |    []    |           |
|  7 | counter           | [24:0] |    []    |           |
|  8 | led               | [7:0]  |    []    |           |
|  9 | rst               |   1    |    []    |           |
| 10 | usr_pll_lock      |   1    |    []    |           |
| 11 | usr_pll_lock_stdy |   1    |    []    |           |
| 12 | usr_ref_out       |   1    |    []    |           |
+----+-------------------+--------+----------+-----------+

## Number of selected bits to be analysed ###
#                                           #
# 2 (max. 600)                              #
#                                           #
#############################################

Select signals to be analyzed (0 = finish): 4

------------------------- blink --------------------------
+----+-------------------+--------+----------+-----------+
|  # | name              | range  | selected | hierarchy |
+----+-------------------+--------+----------+-----------+
|  1 | LED_ctrl          |   1    |    []    |           |
|  2 | clk               |   1    |  ['A']   |           |
|  3 | clk0              |   1    |  ['A']   |           |
|  4 | clk180            |   1    |  ['A']   |           |
|  5 | clk270            |   1    |    []    |           |
|  6 | clk90             |   1    |    []    |           |
|  7 | counter           | [24:0] |    []    |           |
|  8 | led               | [7:0]  |    []    |           |
|  9 | rst               |   1    |    []    |           |
| 10 | usr_pll_lock      |   1    |    []    |           |
| 11 | usr_pll_lock_stdy |   1    |    []    |           |
| 12 | usr_ref_out       |   1    |    []    |           |
+----+-------------------+--------+----------+-----------+

## Number of selected bits to be analysed ###
#                                           #
# 3 (max. 600)                              #
#                                           #
#############################################

Select signals to be analyzed (0 = finish): 5

------------------------- blink --------------------------
+----+-------------------+--------+----------+-----------+
|  # | name              | range  | selected | hierarchy |
+----+-------------------+--------+----------+-----------+
|  1 | LED_ctrl          |   1    |    []    |           |
|  2 | clk               |   1    |  ['A']   |           |
|  3 | clk0              |   1    |  ['A']   |           |
|  4 | clk180            |   1    |  ['A']   |           |
|  5 | clk270            |   1    |  ['A']   |           |
|  6 | clk90             |   1    |    []    |           |
|  7 | counter           | [24:0] |    []    |           |
|  8 | led               | [7:0]  |    []    |           |
|  9 | rst               |   1    |    []    |           |
| 10 | usr_pll_lock      |   1    |    []    |           |
| 11 | usr_pll_lock_stdy |   1    |    []    |           |
| 12 | usr_ref_out       |   1    |    []    |           |
+----+-------------------+--------+----------+-----------+

## Number of selected bits to be analysed ###
#                                           #
# 4 (max. 600)                              #
#                                           #
#############################################

Select signals to be analyzed (0 = finish): 6

------------------------- blink --------------------------
+----+-------------------+--------+----------+-----------+
|  # | name              | range  | selected | hierarchy |
+----+-------------------+--------+----------+-----------+
|  1 | LED_ctrl          |   1    |    []    |           |
|  2 | clk               |   1    |  ['A']   |           |
|  3 | clk0              |   1    |  ['A']   |           |
|  4 | clk180            |   1    |  ['A']   |           |
|  5 | clk270            |   1    |  ['A']   |           |
|  6 | clk90             |   1    |  ['A']   |           |
|  7 | counter           | [24:0] |    []    |           |
|  8 | led               | [7:0]  |    []    |           |
|  9 | rst               |   1    |    []    |           |
| 10 | usr_pll_lock      |   1    |    []    |           |
| 11 | usr_pll_lock_stdy |   1    |    []    |           |
| 12 | usr_ref_out       |   1    |    []    |           |
+----+-------------------+--------+----------+-----------+

## Number of selected bits to be analysed ###
#                                           #
# 5 (max. 600)                              #
#                                           #
#############################################

Select signals to be analyzed (0 = finish): 7

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! NOTE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!                                                                                  !
! Define a range for the vector to be analyzed.                                    !
!  you can do this in the following ways:                                          !
!   1) Press enter to analyze the entire vector                                    !
!   2) Define an area of the vector. (The area should be within the vector area):  !
!        e.g.: '[1:0]'                                                             !
!   3) Individual signals:                                                         !
!        e.g.: '1'                                                                 !
!   4) Any combination of areas and individual signals                             !
!        e.g.: '9, [7:5], 3, [1:0]'                                                !
! define Signals in descending order!                                              !
!                                                                                  !
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

reg [24:0] counter:


------------------------- blink --------------------------
+----+-------------------+--------+----------+-----------+
|  # | name              | range  | selected | hierarchy |
+----+-------------------+--------+----------+-----------+
|  1 | LED_ctrl          |   1    |    []    |           |
|  2 | clk               |   1    |  ['A']   |           |
|  3 | clk0              |   1    |  ['A']   |           |
|  4 | clk180            |   1    |  ['A']   |           |
|  5 | clk270            |   1    |  ['A']   |           |
|  6 | clk90             |   1    |  ['A']   |           |
|  7 | counter           | [24:0] |  ['A']   |           |
|  8 | led               | [7:0]  |    []    |           |
|  9 | rst               |   1    |    []    |           |
| 10 | usr_pll_lock      |   1    |    []    |           |
| 11 | usr_pll_lock_stdy |   1    |    []    |           |
| 12 | usr_ref_out       |   1    |    []    |           |
+----+-------------------+--------+----------+-----------+

## Number of selected bits to be analysed ###
#                                           #
# 30 (max. 600)                             #
#                                           #
#############################################

Select signals to be analyzed (0 = finish): 0

!!!!!!!!!!!!!!!!!!! Note !!!!!!!!!!!!!!!!!!!!
!                                           !
! The capture duration must be defined.     !
! The maximum duration depends on:          !
!  - available ram                          !
!  - width of the sample                    !
!  - sampling frequency                     !
! FIFO Cascade (Width x Depth)              !
! FIFO (Input Width x Depth)                !
!                                           !
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

------Please choose one of the following durations: ------
+---+---------+---------------+--------------+-----------+
| # | smp_cnt | duration [us] | FIFO Cascade |      FIFO |
+---+---------+---------------+--------------+-----------+
| 1 |    4096 |         20.48 |        3 x 1 | 10 x 4096 |
| 2 |    8192 |         40.96 |        3 x 2 | 10 x 4096 |
| 3 |   12288 |         61.44 |        3 x 3 | 10 x 4096 |
| 4 |   16384 |         81.92 |        3 x 4 | 10 x 4096 |
| 5 |   20480 |         102.4 |        3 x 5 | 10 x 4096 |
| 6 |   24576 |        122.88 |        3 x 6 | 10 x 4096 |
+---+---------+---------------+--------------+-----------+

Total Capture duration (choose between 1 and 6): 3

############# Capture duration ##############
#                                           #
# Sample count = 12288                      #
# Capture duration = 61.44 us               #
#                                           #
#############################################


Enter the number of capture samples before trigger activation (between 0 and 250): 200

###### Capture duration before Trigger ######
#                                           #
# Sample count = 200                        #
# Capture duration = 1.01 us                #
#                                           #
#############################################


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Note !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!                                                                                   !
! You can override an input or input-vector of your top-level entity using the ILA. !
! Please note that the input will no longer be connected to the FPGA's IO pins.     !
!                                                                                   !
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


Would you like to implement the input control feature? (y/N):

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Note !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!                                                                         !
! There are two default triggers that can be set for exactly one signal:  !
!  'rising edge' and 'falling edge'                                       !
! There is also an optional trigger: pattern compare                      !
! With this option, a pattern can be set across the entire bit width,     !
!  determining for each bit whether it should be '1', '0', or 'dc'        !
!  (don't care) to activate the trigger.                                  !
! If this function is activated, more hardware is required for the ILA    !
!  and the maximum possible sampling frequency may be reduced.            !
!                                                                         !
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


Would you like to implement the function for comparing bit patterns? (y/N):

############ Signals under test #############
#                                           #
# clk                                       #
# clk0                                      #
# clk180                                    #
# clk270                                    #
# clk90                                     #
# [24:0] counter                            #
#                                           #
#############################################

Execute Synthesis...
Output permanently saved to: C:\Users\df\Desktop\ILA_03_10_2024_clean\gatemate_ila\log\yosys.log

Execute Implementation...
Output permanently saved to: C:\Users\df\Desktop\ILA_03_10_2024_clean\gatemate_ila\log\impl.log

################# Configuration File ##################
#                                                     #
# save_config\ila_config_blink_24-10-15_13-33-25.json #
#                                                     #
#######################################################


Upload to FPGA Board...

############ CONFIGURATION NOTE #############
#                                           #
# Trigger at sample no.: 201                #
# Defined analysis frequency: 200000000 Hz  #
#                                           #
#############################################


--- All Signals ----
+----+-------------+
|  # |        Name |
+----+-------------+
|  0 |  counter[0] |
|  1 |  counter[1] |
|  2 |  counter[2] |
|  3 |  counter[3] |
|  4 |  counter[4] |
|  5 |  counter[5] |
|  6 |  counter[6] |
|  7 |  counter[7] |
|  8 |  counter[8] |
|  9 |  counter[9] |
| 10 | counter[10] |
| 11 | counter[11] |
| 12 | counter[12] |
| 13 | counter[13] |
| 14 | counter[14] |
| 15 | counter[15] |
| 16 | counter[16] |
| 17 | counter[17] |
| 18 | counter[18] |
| 19 | counter[19] |
| 20 | counter[20] |
| 21 | counter[21] |
| 22 | counter[22] |
| 23 | counter[23] |
| 24 | counter[24] |
| 25 |       clk90 |
| 26 |      clk270 |
| 27 |      clk180 |
| 28 |        clk0 |
| 29 |         clk |
+----+-------------+

##### current ILA runtime configuration #####
#                                           #
# Number of sequences: 1                    #
#                                           #
#  Sequences Number: 1                      #
#     trigger activation: falling edge      #
#     trigger signal:     counter[0]        #
#                                           #
#############################################



0 -- exit
1 -- change Trigger
2 -- start capture
3 -- reset ILA (resets the config of the ILA)
4 -- reset DUT (hold the DUT in reset until the capture starts)

Enter your choice: 1

################### Trigger configuration ##################
#                                                          #
# Select how many triggers are set directly in succession. #
# For each iteration you can select a separate trigger.    #
# Entering 'e' exits the process                           #
# Enter 'p' for 'previous' to backtrack a step.            #
#                                                          #
############################################################


Number of sequences (int, > 0): 1

###  sequence nr. 1: ###

All possible Trigger activations:
0:      falling edge
1:      rising edge

Trigger activation? in range [0-1]: 1

--- All Signals ----
+----+-------------+
|  # |        Name |
+----+-------------+
|  0 |  counter[0] |
|  1 |  counter[1] |
|  2 |  counter[2] |
|  3 |  counter[3] |
|  4 |  counter[4] |
|  5 |  counter[5] |
|  6 |  counter[6] |
|  7 |  counter[7] |
|  8 |  counter[8] |
|  9 |  counter[9] |
| 10 | counter[10] |
| 11 | counter[11] |
| 12 | counter[12] |
| 13 | counter[13] |
| 14 | counter[14] |
| 15 | counter[15] |
| 16 | counter[16] |
| 17 | counter[17] |
| 18 | counter[18] |
| 19 | counter[19] |
| 20 | counter[20] |
| 21 | counter[21] |
| 22 | counter[22] |
| 23 | counter[23] |
| 24 | counter[24] |
| 25 |       clk90 |
| 26 |      clk270 |
| 27 |      clk180 |
| 28 |        clk0 |
| 29 |         clk |
+----+-------------+
Trigger signal? in range [0-29]: 24

--- All Signals ----
+----+-------------+
|  # |        Name |
+----+-------------+
|  0 |  counter[0] |
|  1 |  counter[1] |
|  2 |  counter[2] |
|  3 |  counter[3] |
|  4 |  counter[4] |
|  5 |  counter[5] |
|  6 |  counter[6] |
|  7 |  counter[7] |
|  8 |  counter[8] |
|  9 |  counter[9] |
| 10 | counter[10] |
| 11 | counter[11] |
| 12 | counter[12] |
| 13 | counter[13] |
| 14 | counter[14] |
| 15 | counter[15] |
| 16 | counter[16] |
| 17 | counter[17] |
| 18 | counter[18] |
| 19 | counter[19] |
| 20 | counter[20] |
| 21 | counter[21] |
| 22 | counter[22] |
| 23 | counter[23] |
| 24 | counter[24] |
| 25 |       clk90 |
| 26 |      clk270 |
| 27 |      clk180 |
| 28 |        clk0 |
| 29 |         clk |
+----+-------------+

##### current ILA runtime configuration #####
#                                           #
# Number of sequences: 1                    #
#                                           #
#  Sequences Number: 1                      #
#     trigger activation: rising edge       #
#     trigger signal:     counter[24]       #
#                                           #
#############################################



0 -- exit
1 -- change Trigger
2 -- start capture
3 -- reset ILA (resets the config of the ILA)
4 -- reset DUT (hold the DUT in reset until the capture starts)

Enter your choice: 4

--- All Signals ----
+----+-------------+
|  # |        Name |
+----+-------------+
|  0 |  counter[0] |
|  1 |  counter[1] |
|  2 |  counter[2] |
|  3 |  counter[3] |
|  4 |  counter[4] |
|  5 |  counter[5] |
|  6 |  counter[6] |
|  7 |  counter[7] |
|  8 |  counter[8] |
|  9 |  counter[9] |
| 10 | counter[10] |
| 11 | counter[11] |
| 12 | counter[12] |
| 13 | counter[13] |
| 14 | counter[14] |
| 15 | counter[15] |
| 16 | counter[16] |
| 17 | counter[17] |
| 18 | counter[18] |
| 19 | counter[19] |
| 20 | counter[20] |
| 21 | counter[21] |
| 22 | counter[22] |
| 23 | counter[23] |
| 24 | counter[24] |
| 25 |       clk90 |
| 26 |      clk270 |
| 27 |      clk180 |
| 28 |        clk0 |
| 29 |         clk |
+----+-------------+

##### current ILA runtime configuration #####
#                                           #
# Number of sequences: 1                    #
#                                           #
#  Sequences Number: 1                      #
#     trigger activation: rising edge       #
#     trigger signal:     counter[24]       #
#                                           #
#############################################



0 -- exit
1 -- change Trigger
2 -- start capture
3 -- reset ILA (resets the config of the ILA)
4 -- reset DUT (hold the DUT in reset until the capture starts)

Enter your choice: 2

################# start Capture #################
#                                               #
# Waiting for device. Press Enter to interrupt. #
#                                               #
#################################################


############### Duration between captures ##############
#                                                      #
# Duration between start and first trigger: 0.671229 s #
#                                                      #
########################################################


############### create vcd file ###############
#                                             #
# vcd_files\ila_blink_24-10-15_13-34-28_0.vcd #
#                                             #
###############################################


Press Enter to continue


--- All Signals ----
+----+-------------+
|  # |        Name |
+----+-------------+
|  0 |  counter[0] |
|  1 |  counter[1] |
|  2 |  counter[2] |
|  3 |  counter[3] |
|  4 |  counter[4] |
|  5 |  counter[5] |
|  6 |  counter[6] |
|  7 |  counter[7] |
|  8 |  counter[8] |
|  9 |  counter[9] |
| 10 | counter[10] |
| 11 | counter[11] |
| 12 | counter[12] |
| 13 | counter[13] |
| 14 | counter[14] |
| 15 | counter[15] |
| 16 | counter[16] |
| 17 | counter[17] |
| 18 | counter[18] |
| 19 | counter[19] |
| 20 | counter[20] |
| 21 | counter[21] |
| 22 | counter[22] |
| 23 | counter[23] |
| 24 | counter[24] |
| 25 |       clk90 |
| 26 |      clk270 |
| 27 |      clk180 |
| 28 |        clk0 |
| 29 |         clk |
+----+-------------+

##### current ILA runtime configuration #####
#                                           #
# Number of sequences: 1                    #
#                                           #
#  Sequences Number: 1                      #
#     trigger activation: rising edge       #
#     trigger signal:     counter[24]       #
#                                           #
#############################################



0 -- exit
1 -- change Trigger
2 -- start capture
3 -- reset ILA (resets the config of the ILA)
4 -- reset DUT (hold the DUT in reset until the capture starts)

Enter your choice: 0
Thank You and Good Bye!