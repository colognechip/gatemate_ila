gatemate_ila\app> python3 ILAcop.py config -vlog C:\Users\df\gatemate_ila\example_DUT\blink\src\ -t blink

################# ccf File ##################
#                                           #
# blink.ccf                                 #
#                                           #
#############################################


############### verilog Files ###############
#                                           #
# blink.v                                   #
#                                           #
#############################################

Examine DUT ...


################ RAM in use #################
#                                           #
# CC_BRAM_20K in use: 0                     #
# CC_BRAM_40K in use: 0                     #
#                                           #
#############################################


!!!!!!!!!!!!!!!!!!!!!!!!!!!!! NOTE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!                                                              !
! Now you will be guided through the configuration of the ILA. !
! Entering 'e' exits the process and generates a configurable  !
! JSON file for the given DUT.                                 !
! Enter 'p' for 'previous' to backtrack a step.                !
!                                                              !
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

----- Ports DUT "blink" -----
+---+--------+-------+------+
| # |  type  | range | Name |
+---+--------+-------+------+
| 0 | input  |   1   | clk  |
| 1 | input  |   1   | rst  |
| 2 | output |   1   | led  |
+---+--------+-------+------+

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! NOTE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!                                                                    !
! The clk-source is crucial, as they also serve as the ILA's source. !
! The ILA gateware expects a frequency of 10 MHz by default.         !
! If the frequency deviates, change the input frequency value        !
! with the -f parameter when starting the program.                   !
!                                                                    !
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


########### found DUT clk source ############
#                                           #
# Input serves as ILA clk source: "clk"     #
#                                           #
#############################################

Do you want to change the clk source? (y:yes/N:no)

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! NOTE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!                                                                !
! The ILA can hold the DUT in reset until capture starts.        !
! This makes it possible to capture the start process of the DUT !
!                                                                !
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


######################## Found external reset input ########################
#                                                                          #
# A potential external reset input signal has been identified,             #
# which can be used to keep the DUT in reset mode via the ILA, if desired. #
# Name of the signal: 'rst'                                                #
#                                                                          #
############################################################################

Would you like to set a different input signal as a user-controllable reset? (y:yes/N:no)

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! NOTE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!                                                                                                 !
! You will be prompted to select signals for analysis from those found in your design under test. !
!                                                                                                 !
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


------------------------- blink --------------------------
+----+-------------------+--------+----------+-----------+
|  # | name              | range  | selected | hierarchy |
+----+-------------------+--------+----------+-----------+
|  1 | counter           | [26:0] |    []    |           |
|  2 | clk               |   1    |    []    |           |
|  3 | clk0              |   1    |    []    |           |
|  4 | clk180            |   1    |    []    |           |
|  5 | clk270            |   1    |    []    |           |
|  6 | clk90             |   1    |    []    |           |
|  7 | led               |   1    |    []    |           |
|  8 | rst               |   1    |    []    |           |
|  9 | usr_pll_lock      |   1    |    []    |           |
| 10 | usr_pll_lock_stdy |   1    |    []    |           |
| 11 | usr_ref_out       |   1    |    []    |           |
+----+-------------------+--------+----------+-----------+

## Number of selected bits to be analysed ###
#                                           #
# 0 (max. 1200)                             #
#                                           #
#############################################

Which signals should be analyzed (0 = finish)? 1

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! NOTE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!                                                                                  !
! Define a range for the vector to be analyzed.                                    !
!  you can do this in the following ways:                                          !
!   1) Press enter to analyze the entire vector                                    !
!   2) Define an area of the vector. (The area should be within the vector area):  !
!        e.g.: '[1:0]'                                                             !
!   3) Individual signals:                                                         !
!        e.g.: '1'                                                                 !
!   4) Any combination of areas and individual signals                             !
!        e.g.: '9, [7:5], 3, [1:0]'                                                !
! define Signals in descending order!                                              !
!                                                                                  !
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

reg [26:0] counter:


------------------------- blink --------------------------
+----+-------------------+--------+----------+-----------+
|  # | name              | range  | selected | hierarchy |
+----+-------------------+--------+----------+-----------+
|  1 | counter           | [26:0] |  ['A']   |           |
|  2 | clk               |   1    |    []    |           |
|  3 | clk0              |   1    |    []    |           |
|  4 | clk180            |   1    |    []    |           |
|  5 | clk270            |   1    |    []    |           |
|  6 | clk90             |   1    |    []    |           |
|  7 | led               |   1    |    []    |           |
|  8 | rst               |   1    |    []    |           |
|  9 | usr_pll_lock      |   1    |    []    |           |
| 10 | usr_pll_lock_stdy |   1    |    []    |           |
| 11 | usr_ref_out       |   1    |    []    |           |
+----+-------------------+--------+----------+-----------+

## Number of selected bits to be analysed ###
#                                           #
# 27 (max. 1200)                            #
#                                           #
#############################################

Which signals should be analyzed (0 = finish)? 2

------------------------- blink --------------------------
+----+-------------------+--------+----------+-----------+
|  # | name              | range  | selected | hierarchy |
+----+-------------------+--------+----------+-----------+
|  1 | counter           | [26:0] |  ['A']   |           |
|  2 | clk               |   1    |  ['A']   |           |
|  3 | clk0              |   1    |    []    |           |
|  4 | clk180            |   1    |    []    |           |
|  5 | clk270            |   1    |    []    |           |
|  6 | clk90             |   1    |    []    |           |
|  7 | led               |   1    |    []    |           |
|  8 | rst               |   1    |    []    |           |
|  9 | usr_pll_lock      |   1    |    []    |           |
| 10 | usr_pll_lock_stdy |   1    |    []    |           |
| 11 | usr_ref_out       |   1    |    []    |           |
+----+-------------------+--------+----------+-----------+

## Number of selected bits to be analysed ###
#                                           #
# 28 (max. 1200)                            #
#                                           #
#############################################

Which signals should be analyzed (0 = finish)? 3

------------------------- blink --------------------------
+----+-------------------+--------+----------+-----------+
|  # | name              | range  | selected | hierarchy |
+----+-------------------+--------+----------+-----------+
|  1 | counter           | [26:0] |  ['A']   |           |
|  2 | clk               |   1    |  ['A']   |           |
|  3 | clk0              |   1    |  ['A']   |           |
|  4 | clk180            |   1    |    []    |           |
|  5 | clk270            |   1    |    []    |           |
|  6 | clk90             |   1    |    []    |           |
|  7 | led               |   1    |    []    |           |
|  8 | rst               |   1    |    []    |           |
|  9 | usr_pll_lock      |   1    |    []    |           |
| 10 | usr_pll_lock_stdy |   1    |    []    |           |
| 11 | usr_ref_out       |   1    |    []    |           |
+----+-------------------+--------+----------+-----------+

## Number of selected bits to be analysed ###
#                                           #
# 29 (max. 1200)                            #
#                                           #
#############################################

Which signals should be analyzed (0 = finish)? 4

------------------------- blink --------------------------
+----+-------------------+--------+----------+-----------+
|  # | name              | range  | selected | hierarchy |
+----+-------------------+--------+----------+-----------+
|  1 | counter           | [26:0] |  ['A']   |           |
|  2 | clk               |   1    |  ['A']   |           |
|  3 | clk0              |   1    |  ['A']   |           |
|  4 | clk180            |   1    |  ['A']   |           |
|  5 | clk270            |   1    |    []    |           |
|  6 | clk90             |   1    |    []    |           |
|  7 | led               |   1    |    []    |           |
|  8 | rst               |   1    |    []    |           |
|  9 | usr_pll_lock      |   1    |    []    |           |
| 10 | usr_pll_lock_stdy |   1    |    []    |           |
| 11 | usr_ref_out       |   1    |    []    |           |
+----+-------------------+--------+----------+-----------+

## Number of selected bits to be analysed ###
#                                           #
# 30 (max. 1200)                            #
#                                           #
#############################################

Which signals should be analyzed (0 = finish)? 5

------------------------- blink --------------------------
+----+-------------------+--------+----------+-----------+
|  # | name              | range  | selected | hierarchy |
+----+-------------------+--------+----------+-----------+
|  1 | counter           | [26:0] |  ['A']   |           |
|  2 | clk               |   1    |  ['A']   |           |
|  3 | clk0              |   1    |  ['A']   |           |
|  4 | clk180            |   1    |  ['A']   |           |
|  5 | clk270            |   1    |  ['A']   |           |
|  6 | clk90             |   1    |    []    |           |
|  7 | led               |   1    |    []    |           |
|  8 | rst               |   1    |    []    |           |
|  9 | usr_pll_lock      |   1    |    []    |           |
| 10 | usr_pll_lock_stdy |   1    |    []    |           |
| 11 | usr_ref_out       |   1    |    []    |           |
+----+-------------------+--------+----------+-----------+

## Number of selected bits to be analysed ###
#                                           #
# 31 (max. 1200)                            #
#                                           #
#############################################

Which signals should be analyzed (0 = finish)? 6

------------------------- blink --------------------------
+----+-------------------+--------+----------+-----------+
|  # | name              | range  | selected | hierarchy |
+----+-------------------+--------+----------+-----------+
|  1 | counter           | [26:0] |  ['A']   |           |
|  2 | clk               |   1    |  ['A']   |           |
|  3 | clk0              |   1    |  ['A']   |           |
|  4 | clk180            |   1    |  ['A']   |           |
|  5 | clk270            |   1    |  ['A']   |           |
|  6 | clk90             |   1    |  ['A']   |           |
|  7 | led               |   1    |    []    |           |
|  8 | rst               |   1    |    []    |           |
|  9 | usr_pll_lock      |   1    |    []    |           |
| 10 | usr_pll_lock_stdy |   1    |    []    |           |
| 11 | usr_ref_out       |   1    |    []    |           |
+----+-------------------+--------+----------+-----------+

## Number of selected bits to be analysed ###
#                                           #
# 32 (max. 1200)                            #
#                                           #
#############################################

Which signals should be analyzed (0 = finish)? 0

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Note !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!                                                                                !
! The sampling frequency determines the rate at which signals are captured.      !
! When choosing the frequency, consider:                                         !
!  - At a minimum, twice the highest frequency of the DUT. (recommended: thrice) !
!  - Harmonious with the frequency of the DUT (an integral multiple larger).     !
! Recommended Max. sampling frequency up to 160MHz.                              !
!                                                                                !
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Choose a sampling frequency (greater than 0, float, in MHz): 160

!!!!!!!!!!!!!!!!!!! Note !!!!!!!!!!!!!!!!!!!!
!                                           !
! The capture duration must be defined.     !
! The maximum duration depends on:          !
!  - available ram                          !
!  - width of the sample                    !
!  - sampling frequency                     !
!                                           !
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Please choose one of the following durations:
+----+---------+---------------+
|  # | smp_cnt | duration [us] |
+----+---------+---------------+
|  1 |      23 |          0.14 |
|  2 |      55 |          0.34 |
|  3 |     119 |          0.74 |
|  4 |     247 |          1.54 |
|  5 |     503 |          3.14 |
|  6 |    1015 |          6.34 |
|  7 |    2039 |         12.74 |
|  8 |    4087 |         25.54 |
|  9 |    8183 |         51.14 |
| 10 |   16375 |        102.34 |
+----+---------+---------------+

Capture duration before trigger activation (choose between 1 and 11): 6

###### Capture duration before Trigger ######
#                                           #
# Sample count = 1016                       #
# Capture duration = 6.34 us                #
#                                           #
#############################################

Please choose one of the following durations:
+---+---------+---------------+
| # | smp_cnt | duration [us] |
+---+---------+---------------+
| 1 |    1032 |          6.45 |
| 2 |    3080 |         19.25 |
| 3 |    7176 |         44.85 |
| 4 |   15368 |         96.05 |
| 5 |   31752 |        198.45 |
+---+---------+---------------+

Capture duration after trigger activation (choose between 1 and 6): 1

###### Capture duration after Trigger #######
#                                           #
# Sample count = 1032                       #
# Capture duration = 6.45 us                #
#                                           #
#############################################


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Note !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!                                                                         !
! There are two default triggers that can be set for exactly one signal:  !
!  'rising edge' and 'falling edge'                                       !
! There is also an optional trigger: pattern compare                      !
! With this option, a pattern can be set across the entire bit width,     !
!  determining for each bit whether it should be '1', '0', or 'dc'        !
!  (don't care) to activate the trigger.                                  !
! If this function is activated, more hardware is required for the ILA    !
!  and the maximum possible sampling frequency may be reduced.            !
!                                                                         !
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


Would you like me to implement the function for comparing bit patterns? (y/N): y

############ Signals under test #############
#                                           #
# [26:0] counter                            #
# clk                                       #
# clk0                                      #
# clk180                                    #
# clk270                                    #
# clk90                                     #
#                                           #
#############################################

Execute Synthesis...
Output permanently saved to: C:\Users\df\gatemate_ila/log/yosys.log

Execute Implementation...
Output permanently saved to: C:\Users\df\gatemate_ila/log/impl.log

################# Configuration File ##################
#                                                     #
# save_config/ila_config_blink_23-12-05_15-34-21.json #
#                                                     #
#######################################################

Upload to FPGA Board...

############ CONFIGURATION NOTE #############
#                                           #
# Trigger at sample no.: 1015               #
# Defined analysis frequency: 160000000 Hz  #
#                                           #
#############################################

-------- All Signals ---------
+----+-------------+---------+
|  # |        Name | Pattern |
+----+-------------+---------+
|  0 |       clk90 |      dc |
|  1 |      clk270 |      dc |
|  2 |      clk180 |      dc |
|  3 |        clk0 |      dc |
|  4 |         clk |      dc |
|  5 |  counter[0] |      dc |
|  6 |  counter[1] |      dc |
|  7 |  counter[2] |      dc |
|  8 |  counter[3] |      dc |
|  9 |  counter[4] |      dc |
| 10 |  counter[5] |      dc |
| 11 |  counter[6] |      dc |
| 12 |  counter[7] |      dc |
| 13 |  counter[8] |      dc |
| 14 |  counter[9] |      dc |
| 15 | counter[10] |      dc |
| 16 | counter[11] |      dc |
| 17 | counter[12] |      dc |
| 18 | counter[13] |      dc |
| 19 | counter[14] |      dc |
| 20 | counter[15] |      dc |
| 21 | counter[16] |      dc |
| 22 | counter[17] |      dc |
| 23 | counter[18] |      dc |
| 24 | counter[19] |      dc |
| 25 | counter[20] |      dc |
| 26 | counter[21] |      dc |
| 27 | counter[22] |      dc |
| 28 | counter[23] |      dc |
| 29 | counter[24] |      dc |
| 30 | counter[25] |      dc |
| 31 | counter[26] |      dc |
+----+-------------+---------+

##### current ILA runtime configuration #####
#                                           #
# Number of sequences: 1                    #
#                                           #
#  Sequences Number: 1                      #
#     trigger activation: falling edge      #
#     trigger signal:     clk90             #
#                                           #
#############################################



0 -- exit
1 -- change Trigger
2 -- start capture
3 -- reset ILA (resets the config of the ILA)
4 -- reset DUT (hold the DUT in reset until the capture starts)

Enter your choice:1

################### Trigger configuration ##################
#                                                          #
# Select how many triggers are set directly in succession. #
# For each iteration you can select a separate trigger.    #
# Entering 'e' exits the process                           #
# Enter 'p' for 'previous' to backtrack a step.            #
#                                                          #
############################################################


Number of sequences (int, > 0): 1

###  sequence nr. 1: ###

All possible Trigger activations:
0:      falling edge
1:      rising edge
2:      pattern

Trigger activation? in range [0-2]: 2

!!!!!!!!!!!!!!!!!!!!!! Pattern as trigger !!!!!!!!!!!!!!!!!!!!!!!
!                                                               !
! Define the Bit-Pattern for Trigger Activation                 !
! Set individual bits using '0' and '1'                         !
! Set up a hex pattern using the key 'h' followed by hex values !
! set all remaining signals to dont care with 'r'               !
! all other inputs set a single signal to dc                    !
!                                                               !
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

clk90:
clk270:
clk180:
clk0:
clk:
counter[0]: h280acf
counter[0]: 1
counter[1]: 1
counter[2]: 1
counter[3]: 1
counter[4]: 0
counter[5]: 0
counter[6]: 1
counter[7]: 1
counter[8]: 0
counter[9]: 1
counter[10]: 0
counter[11]: 1
counter[12]: 0
counter[13]: 0
counter[14]: 0
counter[15]: 0
counter[16]: 0
counter[17]: 0
counter[18]: 0
counter[19]: 1
counter[20]: 0
counter[21]: 1
counter[22]: 0
counter[23]: 0
counter[24]: r

-------- All Signals ---------
+----+-------------+---------+
|  # |        Name | Pattern |
+----+-------------+---------+
|  0 |       clk90 |      dc |
|  1 |      clk270 |      dc |
|  2 |      clk180 |      dc |
|  3 |        clk0 |      dc |
|  4 |         clk |      dc |
|  6 |  counter[0] |       1 |
|  7 |  counter[1] |       1 |
|  8 |  counter[2] |       1 |
|  9 |  counter[3] |       1 |
| 10 |  counter[4] |       0 |
| 11 |  counter[5] |       0 |
| 12 |  counter[6] |       1 |
| 13 |  counter[7] |       1 |
| 14 |  counter[8] |       0 |
| 15 |  counter[9] |       1 |
| 16 | counter[10] |       0 |
| 17 | counter[11] |       1 |
| 18 | counter[12] |       0 |
| 19 | counter[13] |       0 |
| 20 | counter[14] |       0 |
| 21 | counter[15] |       0 |
| 22 | counter[16] |       0 |
| 23 | counter[17] |       0 |
| 24 | counter[18] |       0 |
| 25 | counter[19] |       1 |
| 26 | counter[20] |       0 |
| 27 | counter[21] |       1 |
| 28 | counter[22] |       0 |
| 29 | counter[23] |       0 |
| 29 | counter[24] |      dc |
| 30 | counter[25] |      dc |
| 31 | counter[26] |      dc |
+----+-------------+---------+

##### current ILA runtime configuration #####
#                                           #
# Number of sequences: 1                    #
#                                           #
#  Sequences Number: 1                      #
#     trigger activation: pattern           #
#                                           #
#############################################



0 -- exit
1 -- change Trigger
2 -- start capture
3 -- reset ILA (resets the config of the ILA)
4 -- reset DUT (hold the DUT in reset until the capture starts)

Enter your choice: 2

################# start Capture #################
#                                               #
# Waiting for device. Press Enter to interrupt. #
#                                               #
#################################################


############### Duration between captures ##############
#                                                      #
# Duration between start and first trigger: 0.533429 s #
#                                                      #
########################################################


############### create vcd file ###############
#                                             #
# vcd_files/ila_blink_23-12-05_15-54-35_0.vcd #
#                                             #
###############################################


Press Enter to continue

-------- All Signals ---------
+----+-------------+---------+
|  # |        Name | Pattern |
+----+-------------+---------+
|  0 |       clk90 |      dc |
|  1 |      clk270 |      dc |
|  2 |      clk180 |      dc |
|  3 |        clk0 |      dc |
|  4 |         clk |      dc |
|  6 |  counter[0] |       1 |
|  7 |  counter[1] |       1 |
|  8 |  counter[2] |       1 |
|  9 |  counter[3] |       1 |
| 10 |  counter[4] |       0 |
| 11 |  counter[5] |       0 |
| 12 |  counter[6] |       1 |
| 13 |  counter[7] |       1 |
| 14 |  counter[8] |       0 |
| 15 |  counter[9] |       1 |
| 16 | counter[10] |       0 |
| 17 | counter[11] |       1 |
| 18 | counter[12] |       0 |
| 19 | counter[13] |       0 |
| 20 | counter[14] |       0 |
| 21 | counter[15] |       0 |
| 22 | counter[16] |       0 |
| 23 | counter[17] |       0 |
| 24 | counter[18] |       0 |
| 25 | counter[19] |       1 |
| 26 | counter[20] |       0 |
| 27 | counter[21] |       1 |
| 28 | counter[22] |       0 |
| 29 | counter[23] |       0 |
| 29 | counter[24] |      dc |
| 30 | counter[25] |      dc |
| 31 | counter[26] |      dc |
+----+-------------+---------+

##### current ILA runtime configuration #####
#                                           #
# Number of sequences: 1                    #
#                                           #
#  Sequences Number: 1                      #
#     trigger activation: pattern           #
#                                           #
#############################################



0 -- exit
1 -- change Trigger
2 -- start capture
3 -- reset ILA (resets the config of the ILA)
4 -- reset DUT (hold the DUT in reset until the capture starts)

Enter your choice: